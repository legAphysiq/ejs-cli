#! /usr/bin/env node

var fs = require('fs');
var main = require('../lib/main.js')
var argv = require('yargs')
    .usage('Usage: $0 filename [-o output] [-d data] [-p options]')
    .example('$0 ./foo/bar.ejs -o ./foo/bar.html -d data.json -p options.json')
    .alias('o', 'output')
    .nargs('o', 1)
    .describe('o', 'Output')
    .alias('d', 'data')
    .nargs('d', 1)
    .describe('d', 'Data')
    .alias('p', 'options')
    .nargs('p', 1)
    .describe('p', 'Options')
    .help('h')
    .alias('h', 'help')
    .demand(1,'Input File Required')
    .argv;

// should only receive one input file
if(argv._.length > 1){
	console.log("Too many arguements");
	process.exit(1);
}

/* 
todo:
  support EJS data, parse and pass an data object
  support EJS options, parse and pass an options object 
*/
var inf = argv._[0];
var outf = argv.output===undefined?inf.replace('.ejs','.html'):outf;
var data = argv.data===undefined?'{}':argv.data;
var options = argv.options===undefined?'{}':argv.options;

var handleError = function(err){
    console.log(err);
    process.exit(1);
}

var validateInf = function(){
    return new Promise(function(res, rej){
        fs.stat(inf, function(err, stats){
            if (err) {
                rej(err)
            }
            else{
                if(stats.isFile()){
                    res();
                }
                else{
                    rej("Invalid Source File")
                }
            }
        })
    })
}

var start = function(){
    main(inf, outf, data, options);
}

validateInf()
    .then(start, handleError)


// console.log(process.cwd())



